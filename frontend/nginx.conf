server {
    listen 4400;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable error logging for debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Debug headers
        add_header X-Debug-Root $document_root;
        add_header X-Debug-URI $uri;
    }

    # Proxy API requests to the backend (with graceful fallback)
    location /auth {
        # Use resolver for dynamic hostname resolution
        resolver 127.0.0.11 valid=30s ipv6=off;
        set $backend "receipts-api:8000";
        
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle connection errors gracefully
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_unavailable;
    }

    location /receipts {
        # Use resolver for dynamic hostname resolution
        resolver 127.0.0.11 valid=30s ipv6=off;
        set $backend "receipts-api:8000";
        
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle connection errors gracefully
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_unavailable;
    }

    # Fallback when backend is unavailable
    location @backend_unavailable {
        add_header Content-Type application/json;
        return 503 '{"error": "Backend service temporarily unavailable", "message": "Please ensure the backend container is running"}';
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

steps:
  # 🧪 BUILD APP
  build:
    image: python:3.12-slim
    commands:
      - echo "🔧 Installing dependencies..."
      - apt-get update && apt-get install -y gcc && rm -rf /var/lib/apt/lists/*
      - echo "📦 Installing base dependencies..."
      - pip install --timeout 1000 --retries 5 -r requirements-base.txt
      - echo "🔐 Installing auth dependencies..."
      - pip install --timeout 1000 --retries 5 -r requirements-auth.txt
      - echo "🗃️ Installing database dependencies..."
      - pip install --timeout 1000 --retries 5 -r requirements-db.txt
      - echo "🔧 Installing utility dependencies..."
      - pip install --timeout 1000 --retries 5 -r requirements-utils.txt
      - echo "🤖 Installing ML dependencies..."
      - pip install --timeout 1000 --retries 5 -r requirements-ml.txt
      - echo "🏗️ Building app..."
      - python setup.py build || echo "No setup.py found, skipping..."
      - echo "✅ Build complete"

  # 🚀 DEPLOY APP
  deploy:
    image: docker/compose:latest
    commands:
      - echo "🚀 Deploying app to host filesystem..."
      - rm -rf /mnt/deploy/*
      - cp -r ./* /mnt/deploy/
      - echo "🧹 Stopping and removing old containers..."
      - docker stop receipts-backend receipts-frontend receipts || true
      - docker rm receipts-backend receipts-frontend receipts || true
      - echo "📦 Running docker-compose from /mnt/deploy..."
      - docker compose -f /mnt/deploy/docker-compose.yml down || true
      - docker compose -f /mnt/deploy/docker-compose.yml up -d --build
      - echo "✅ Deployment complete!"

  # 🧹 CLEANUP
  cleanup:
    image: docker/compose:latest
    commands:
      - docker compose down --remove-orphans || true
      - docker system prune -f || true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master
